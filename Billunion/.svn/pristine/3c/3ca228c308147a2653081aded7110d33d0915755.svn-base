//
//  StockView.m
//  Billunion
//
//  Created by QT on 17/1/11.
//  Copyright © 2017年 JM. All rights reserved.
//

#import "StockView.h"
#import "StockCell.h"

#import "UIScrollView+Refresh.h"

#import "YYRrefreshControl.h"
#import "YYRefreshFooterView.h"

#define kLabelWidth WIDTH/3
#define kLabelHeight 36
#define kLeftBtnWidth 50

@interface StockView()<UITableViewDelegate,UITableViewDataSource,StockCellDelegate,UIActionSheetDelegate>

/** 右边大的scrollView */
@property(nonatomic,strong) UIScrollView*  bigScrollView;
/** 右边tableView 的标题 */
@property (nonatomic,strong)NSArray *subTitles;

/** 用于记录是否选中所有 */
@property (nonatomic,assign) BOOL isSelectAll;

/** 产品编号的 全选按钮 */
@property (nonatomic,strong)UIButton *selectedAllBtn;

@property (nonatomic,strong) UIView *refreshView;

@property (nonatomic, strong) YYRrefreshControl *refreshControl;
@property (nonatomic,strong)  YYRefreshFooterView *footerControl;
//没有数据图片
@property (nonatomic,strong)UIImageView *noneImageView;

@end

@implementation StockView
-(NSMutableArray *)selectBtnArray
{
    if (!_selectBtnArray) {
        _selectBtnArray = [NSMutableArray array];
    }
    return _selectBtnArray;
}


-(NSMutableArray *)dataArray
{
    if (!_dataArray) {
        _dataArray = [NSMutableArray array];
    }
    return _dataArray;
}

// 接收通知监听的方法
- (void)headerRefresh{
    if ([self.delegate respondsToSelector:@selector(stockViewHeaderRefresh:)]) {
        [self.delegate stockViewHeaderRefresh:self];
    }
}

- (void)footerRefresh{
    if ([self.delegate respondsToSelector:@selector(stockViewFooterRefresh:)]) {
        [self.delegate stockViewFooterRefresh:self];
    }
}

-(void)endRefresh
{
    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(0.5 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
        if (self.refreshControl) {
            [self.refreshControl endRefreshing];
        }
    });
        if (self.footerControl) {
            [self.footerControl endRefreshing];
        }
   
}

-(UIImageView *)noneImageView
{
    if (!_noneImageView) {
        _noneImageView = [[UIImageView alloc]initWithImage:[UIImage imageNamed:@"none"]];
        [_noneImageView sizeToFit];
        _noneImageView.frame = STRect((750-191)/2.0, (STPixelY(self.height)-216)/2.0, 191, 216);
        
        [self addSubview:_noneImageView];
    }
    return _noneImageView;
}


#pragma mark - 初始化

-(instancetype)initWithFrame:(CGRect)frame withTransactionType:(TransactionType)transactionType titles:(NSArray *)titles
{
    if (self = [super initWithFrame:frame]) {
        self.backgroundColor = [UIColor blackColor];
        self.numPage = 1;
        /** 获取交易类型 是单个交易还是多个同时交易 */
        self.transactionType = transactionType;
        self.subTitles = titles;
        [self addSubview:self.leftTableView];
        [self addSubview:self.bigScrollView];
        [self.bigScrollView addSubview:self.subsTablView];
        [self addObserver:self forKeyPath:@"dataArray" options:NSKeyValueObservingOptionNew context:nil];
   }
    return self;
}

-(void)observeValueForKeyPath:(NSString *)keyPath ofObject:(id)object change:(NSDictionary<NSKeyValueChangeKey,id> *)change context:(void *)context{
    if ([keyPath isEqualToString:@"dataArray"]) {
        if (self.dataArray.count == 0) {
            self.noneImageView.hidden = NO;
            [self bringSubviewToFront:self.noneImageView];
        }else{
            self.noneImageView.hidden = YES;
        }
    }
}

- (void)addHeaderRefresh{
    _refreshControl = [[YYRrefreshControl alloc] init];
    [_refreshControl addTarget:self action:@selector(headerRefresh) forControlEvents:UIControlEventValueChanged];
    [self addSubview:self.refreshControl];
}

- (void)addFooterRefresh{
        _footerControl = [[YYRefreshFooterView alloc]init];
        [_footerControl addTarget:self action:@selector(footerRefresh) forControlEvents:UIControlEventValueChanged];
    [self addSubview:self.footerControl];
}

/**
 配置左侧Tableview
 */
-(UITableView *)leftTableView{
    if (!_leftTableView) {
          if (self.transactionType == TransactionTypeMultiple) {
          _leftTableView = [[UITableView alloc]initWithFrame:CGRectMake(0, 0, kLabelWidth+kLeftBtnWidth, self.frame.size.height) style:(UITableViewStylePlain)];
          }else{
           _leftTableView = [[UITableView alloc]initWithFrame:CGRectMake(0, 0, kLabelWidth, self.frame.size.height) style:(UITableViewStylePlain)];
          }
        _leftTableView.delegate = self;
        _leftTableView.dataSource = self;
        _leftTableView.backgroundColor = [UIColor blackColor];
        _leftTableView.showsVerticalScrollIndicator = NO;
        _leftTableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    }
    return _leftTableView;
}

/**
 配置右边大ScorllView
 */
-(UIScrollView *)bigScrollView{
    if (_bigScrollView == nil) {
     
            _bigScrollView = [[UIScrollView alloc]initWithFrame:CGRectMake(self.leftTableView.frame.size.width,0, WIDTH  - self.leftTableView.frame.size.width, self.leftTableView.frame.size.height)];
            _bigScrollView.contentSize = CGSizeMake(kLabelWidth*self.subTitles.count, self.leftTableView.frame.size.height);
   
        _bigScrollView.backgroundColor = [UIColor redColor];
        _bigScrollView.bounces = NO;
        _bigScrollView.alwaysBounceVertical = YES;
        _bigScrollView.alwaysBounceHorizontal = YES;
        _bigScrollView.showsVerticalScrollIndicator = NO;
        _bigScrollView.showsHorizontalScrollIndicator = NO;
    }
    return _bigScrollView;
}

/**
 配置右侧子tableview
 */
-(UITableView *)subsTablView
{
    if (!_subsTablView) {
        _subsTablView = [[UITableView alloc]initWithFrame:CGRectMake(0,0,kLabelWidth*self.subTitles.count, self.leftTableView.frame.size.height) style:(UITableViewStylePlain)];
        _subsTablView.delegate = self;
        _subsTablView.dataSource = self;
        _subsTablView.showsVerticalScrollIndicator = NO;
        _subsTablView.backgroundColor = [UIColor blackColor];
        _subsTablView.separatorStyle = UITableViewCellSeparatorStyleNone;
    }
    return _subsTablView;
}



#pragma mark- TableViewDelegate and Datasource
-(NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return self.dataArray.count;
}

-(UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    UITableViewCell *cell;

    if (tableView == self.leftTableView) {
        StockCell *stockCell = [tableView dequeueReusableCellWithIdentifier:@"Left"];
        if (stockCell == nil) {
              CGFloat width = (self.transactionType == TransactionTypeMultiple) ? kLabelWidth+kLeftBtnWidth :  kLabelWidth ;
            stockCell = [[StockCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:@"Left" itemsCount:1 cellWidth:width cellHeigth:kLabelHeight isLeftCell:YES transactionType:self.transactionType ];
        }
         stockCell.transactionType = self.transactionType;
        stockCell.delegate = self;
        if ([self.selectBtnArray containsObject:@(indexPath.row)]) {
              stockCell.selectedBtn.selected = YES;
        }else{
            stockCell.selectedBtn.selected = NO;
        }
       
        if (_dataArray.count) {
            [stockCell setCellInfo:_dataArray[indexPath.row] indexPath:indexPath];
        }
         cell = stockCell;
    }else{
        StockCell *stockCell = [tableView dequeueReusableCellWithIdentifier:@"StockCell"];
        if (stockCell == nil) {
          stockCell = [[StockCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:@"StockCell" itemsCount:self.subTitles.count cellWidth:kLabelWidth*self.subTitles.count cellHeigth:kLabelHeight isLeftCell:NO transactionType:self.transactionType];
        }

        if (_dataArray.count) {
             [stockCell setCellInfo:_dataArray[indexPath.row] indexPath:indexPath];
        }
        stockCell.delegate = self;
        cell = stockCell;
    }
    
    //* 长按手势 **/
    UILongPressGestureRecognizer *longGesture = [[UILongPressGestureRecognizer alloc] initWithTarget:self action:@selector(handleLongPress:)];
    [cell addGestureRecognizer:longGesture];
    
    cell.backgroundColor = MainColor;
    cell.selectionStyle = UITableViewCellSelectionStyleNone;
    
    return cell;
}

- (UIViewController *)getTaget{
    for (UIView* next = [self superview]; next; next = next.superview) {
        UIResponder* nextResponder = [next nextResponder];
        if ([nextResponder isKindOfClass:[UIViewController class]]) {
            UIViewController *ctl = (UIViewController*)nextResponder;
            return ctl;
        }
    }
    return nil;
}

- (void)addSubTableView:(UITableViewCell *)cell{
    [cell.contentView addSubview:self.leftTableView];
    [cell.contentView addSubview:self.bigScrollView];
    [self.bigScrollView addSubview:self.subsTablView];
}



-(UITableViewCell*)getCellWith:(UITableView*)tableView cellID:(NSString *)cellID
{
    UITableViewCell* cell = [tableView dequeueReusableCellWithIdentifier:cellID];
    if (!cell) {
        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:cellID ];
    }
    return  cell;
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return kLabelHeight;
}
- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    return  kLabelHeight;
}


-(UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section
{
    UIView *superView = [[UIView alloc]initWithFrame:CGRectMake(0, 0, self.leftTableView.frame.size.width, 44)];
    superView.backgroundColor = MainColor;
    
    if (tableView == self.leftTableView) {
        [self createLabelWith:@[ NSLocalizedString(@"ProductCode", nil)]  tableView:tableView superView:superView];
    }else{
        [self createLabelWith:self.subTitles tableView:tableView superView:superView];
    }
    return superView;
}

#pragma mark -  头部视图
-(void)createLabelWith:(NSArray *)titles tableView:(UITableView *)tableView superView:(UIView *)superView
{
    
    for (int i = 0; i<titles.count; i++) {
        
        /** label */
        UILabel *label = [superView viewWithTag:i+2222];
        
        if (!label) {
            label = [UILabel labelWithText:nil fontSize:12 textColor:[UIColor colorWithRGBHex:0xfefefe] alignment:NSTextAlignmentCenter];
            if (self.transactionType == TransactionTypeMultiple && tableView == self.leftTableView) {
                label.frame =CGRectMake(kLeftBtnWidth, 0, kLabelWidth, kLabelHeight);
                UIButton *btn = [UIButton buttonWithNormalImage:@"circle" selectImage:@"circle_pr" imageType:btnImgTypeSmall target:self action:@selector(selectedAll:)];
                
                btn.frame = CGRectMake(0, 0, kLeftBtnWidth, kLabelHeight);
                self.selectedAllBtn = btn;
                btn.selected = self.isSelectAll;
                [superView addSubview:btn];
                
                UIView *btnLineView = [[UIView alloc] initWithFrame:CGRectMake(btn.width-1, 0, 1,kLabelHeight)];
                btnLineView.backgroundColor = [UIColor colorWithRGBHex:0x1a2d44];
                [btn addSubview:btnLineView];
                
            }else{
                label.frame = CGRectMake(kLabelWidth*i, 0, kLabelWidth, kLabelHeight);
            }
            label.backgroundColor = [UIColor clearColor];
            [superView addSubview:label];
            label.tag = i+2222;
            
            UIView *vLineView = [[UIView alloc] initWithFrame:CGRectMake(label.width-1, 0, 1,kLabelHeight)];
            vLineView.backgroundColor = [UIColor colorWithRGBHex:0x1a2d44];
            [label addSubview:vLineView];
        }
        label.text = titles[i];
    }
    CGFloat width = (self.transactionType == TransactionTypeMultiple) ? kLabelWidth*titles.count+kLeftBtnWidth :  kLabelWidth*titles.count;
    UIView *hLineView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, width, 1)];
    hLineView.backgroundColor = [UIColor colorWithRGBHex:0x1a2d44];
    [superView addSubview:hLineView];
}



#pragma mark -   StockCellDelegate
/** 选择单个按钮的逻辑 */
-(void)stockCell:(StockCell *)cell selectedAtIndex:(NSInteger)index
{
    if ([self.selectBtnArray containsObject:@(index)]) {
        // 如果包含了 就删除掉
        [self.selectBtnArray removeObject:@(index)];
    }else{
        [self.selectBtnArray addObject:@(index)];
    }
    self.isSelectAll = (self.selectBtnArray.count == _dataArray.count);
    self.selectedAllBtn.selected = self.isSelectAll;
  
    if (self.delegate && [self.delegate respondsToSelector:@selector(stockSelectedWithIndexArray:)]) {
        [self.delegate stockSelectedWithIndexArray:self.selectBtnArray];
    }
    [self.leftTableView reloadData];
}

/** 选择所有按钮的逻辑 */
-(void)selectedAll:(UIButton *)btn{
    //改变button的选择
    self.isSelectAll = ! self.isSelectAll;
    //删除选择数组里面的下标元素
    [self.selectBtnArray removeAllObjects];

   //如果是全选 从新添加下标数组
    if (self.isSelectAll) {
        for (int i=0;i<_dataArray.count;i++) {
            [self.selectBtnArray addObject:@(i)];
        }
    }

    if (self.delegate && [self.delegate respondsToSelector:@selector(stockSelectedWithIndexArray:)]) {
        [self.delegate stockSelectedWithIndexArray:self.selectBtnArray];
    }
    [self.leftTableView reloadData];
}



#pragma mark - 选择cell的代理方法
//在这个方法里让俩个tableview同步.
-(void)scrollViewDidScroll:(UIScrollView *)scrollView
{
    if(scrollView == self.leftTableView){
        self.subsTablView.contentOffset = self.leftTableView.contentOffset;
    }else if(scrollView == self.subsTablView){
        self.leftTableView.contentOffset = self.subsTablView.contentOffset;
    }

}

-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:NO];
    
    [self stockCell:nil selectedAtIndex:indexPath.row];
    
    if (self.delegate && [self.delegate respondsToSelector:@selector(stockDidSelectWithIndexPath:stockView:)]) {
        [self.delegate stockDidSelectWithIndexPath:indexPath stockView:self];
    }
    
    [self selectCellAnimation:indexPath];
}



- (void)selectCellAnimation:(NSIndexPath *)indexPath{
    /** 选中效果 */
   UITableViewCell *leftCell = [self.leftTableView cellForRowAtIndexPath:indexPath];
    leftCell.backgroundColor = [UIColor colorWithRed:208.0/255 green:208.0/255 blue:208.0/255 alpha:1];
    [UIView animateWithDuration:0.3 animations:^{
        leftCell.backgroundColor = MainColor;
    }];
    
    UITableViewCell *rightCell = [self.subsTablView cellForRowAtIndexPath:indexPath];
    rightCell.backgroundColor = [UIColor colorWithRed:208.0/255 green:208.0/255 blue:208.0/255 alpha:1];
    [UIView animateWithDuration:0.3 animations:^{
        rightCell.backgroundColor = MainColor;
    }];

}

- (void)tableViewReloadData{
    [self.leftTableView  reloadData];
    [self.subsTablView  reloadData];
}

/** 刷新 显示出左边的圈圈 */
-(void)setTransactionType:(TransactionType)transactionType
{
    _transactionType = transactionType;
    
        if (_leftTableView) {
            if (transactionType == TransactionTypeMultiple) {
                _leftTableView.frame = CGRectMake(0, 0, kLabelWidth+kLeftBtnWidth, self.frame.size.height);
                _bigScrollView.frame = CGRectMake(self.leftTableView.frame.size.width,0, WIDTH  - self.leftTableView.frame.size.width, self.leftTableView.frame.size.height);
            }else{
                _leftTableView.frame = CGRectMake(0, 0, kLabelWidth, self.frame.size.height);
                _bigScrollView.frame = CGRectMake(self.leftTableView.frame.size.width,0, WIDTH  - self.leftTableView.frame.size.width, self.leftTableView.frame.size.height);
            }
        }
}

#pragma mark - 长按手势的处理
- (void)handleLongPress:(UIGestureRecognizer *)gestureRecognizer
{
    if (gestureRecognizer.state == UIGestureRecognizerStateBegan) {
        
        StockCell *cell = (StockCell *)gestureRecognizer.view;
        
        [cell becomeFirstResponder];
        
        UIMenuController *menu = [UIMenuController sharedMenuController];
        menu.menuItems = @[
                            //此deleteCell方法在StockCell里写才响应
                           [[UIMenuItem alloc]initWithTitle:NSLocalizedString(@"Delete", nil) action:@selector(deleteCell:)],
                           ];
        //    CGRect rect = CGRectMake(0, cell.frame.size.height*0.5, cell.frame.size.width, 2);
        CGRect rect = CGRectZero;
        [menu setTargetRect:rect inView:cell];
        [menu setMenuVisible:YES animated:YES];
    }
}

-(void)deleteCell:(id)sender{}

/** 选择cell弹出删除按钮后 点击删除按钮调用的方法 */
-(void)stockCellSelectedCellToDelete:(NSIndexPath*)indexPath
{
    NSLog(@"selected row: %ld",indexPath.row);
    if (self.delegate && [self.delegate respondsToSelector:@selector(stockView:didSelectToDelete:)]) {
        [self.delegate stockView:self didSelectToDelete:indexPath];
    }
}

#pragma mark - dealloc
- (void)dealloc{
     NSLog(@"%s",__func__);
    if (self.refreshControl) {
        [self.subsTablView removeObserver:self.refreshControl forKeyPath:@"contentOffset"];
    }
    if (self.footerControl) {
        [self.subsTablView removeObserver:self.footerControl forKeyPath:@"contentOffset"];
    }
    [self removeObserver:self forKeyPath:@"dataArray"];
    
}

#pragma mark - 对网络请求后的处理
-(void)handleResponseWithBillType:(NSInteger)type dataArray:(NSArray *)dataArr errorStr:(NSString *)errorStr isPullUp:(BOOL)isPullUp{
    [Hud hide];
    [self endRefresh];
    if(errorStr == nil){
        if (dataArr.count == 0 && isPullUp) {
            self.numPage -- ;
            if (self.numPage == 1 && self.dataArray.count != 0) {
                [Hud showTipsText:@"没有更多数据!"];
            }
        }
        
        if (!isPullUp) {  // 如果不是上拉刷新 则需清空线
            self.numPage = 1;
            [self.dataArray removeAllObjects];
        }
        [self.dataArray addObjectsFromArray:dataArr];
    }else{
        
        self.numPage -- ;
        [Hud showTipsText:errorStr];
    }
    
    [self reloadTableViewWithBillType:type
                                     data:self.dataArray
                                stockView:self];
}

- (void)reloadTableViewWithBillType:(NSInteger)type data:(NSArray *)array stockView:(StockView *)stockView{
    if (stockView) {
        stockView.dataArray = [array mutableCopy];
        [stockView  tableViewReloadData];
    }
}

@end
