
//
//  StockSelectViewController.m
//  Billunion
//
//  Created by Waki on 2017/2/15.
//  Copyright © 2017年 JM. All rights reserved.
//

#import "StockSelectViewController.h"
#import "StockView.h"
#import "TradeViewModel.h"
#import "KLineViewModel.h"
#import "InfoMationView.h"

@interface StockSelectViewController ()<StockViewProtocol>

@property (nonatomic,strong) StockView *stockView;
@property (nonatomic, strong) TradeViewModel *tradeViewModel;
@property (nonatomic ,strong) InfoMationView *infoMationView;

@property (nonatomic,assign) NSInteger tradeMode;
@property (nonatomic,strong) NSNumber *counterPartyId;

@end

@implementation StockSelectViewController

- (TradeViewModel *)tradeViewModel{
    if (!_tradeViewModel) {
        _tradeViewModel = [[TradeViewModel alloc] init];
    }
    return _tradeViewModel;
}

- (void)viewDidLoad {
    [super viewDidLoad];
    [self setupBakcButton];
    self.title = @"编辑成交";
    NSArray * subTitles =  [Tools getSubTitlesWithStockAllType:StockAllType_Select_Trade];
    [self addStockViewWithSubTitles:subTitles];
    [self layoutButton];
    
    
    _infoMationView = [[InfoMationView alloc] initWithFrame:self.view.bounds];
    [self.view addSubview:_infoMationView];
}

- (void)addStockViewWithSubTitles:(NSArray *)subTitles{
    self.stockView = [[StockView alloc]initWithFrame:CGRectMake(0, 64, WIDTH, HEIGHT-64) withTransactionType:TransactionTypeSingle titles:subTitles];
    self.stockView.delegate = self;
    [self.view addSubview:self.stockView];
    
    self.stockView.dataArray = (NSMutableArray *)self.dataArray;
    [self.stockView tableViewReloadData];
}

- (void)layoutButton{
    UIView *bottomView = [[UIView alloc] initWithFrame:CGRectMake(0, HEIGHT-44, WIDTH, 44)];
    [self.view addSubview:bottomView];
    NSArray *titleArray = @[@"挑票成交" ,@"批量成交"];
    for (int i = 0; i < 2;i++ ) {
        UIButton *button = [UIButton buttonWithTitle:titleArray[i] titleFont:14 titleColor:[UIColor whiteColor] target:self action:@selector(tradeSelect:)];
        button.backgroundColor = [UIColor colorWithRGBHex:0x2262ac];
        button.tag = 567+i;
        button.frame = CGRectMake(WIDTH/2*i, 0, WIDTH/2, bottomView.height);
        [bottomView addSubview:button];
    }
    UIView *spaceView = [[UIView alloc] initWithFrame:CGRectMake(WIDTH/2, 0, 1, bottomView.height)];
    spaceView.backgroundColor = [UIColor colorWithRGBHex:0x999999];
    spaceView.alpha = 0.4;
    [bottomView addSubview:spaceView];
}

- (void)tradeSelect:(UIButton *)btn{
    if(![TradeViewModel judgeHaveDiscountRate:self.dataArray]){
        [UIAlertController alertControllerWithTitle:@"提示" message:NSLocalizedString(@"DISCOUNTRATE_NONE", nil)  okTitle:@"确定" cancelTtile:nil target:self clickBlock:nil];
        return;
    }
    
    if (btn.tag == 567) {
        //挑票成交
        _tradeMode = 1;
    }else{
       //批量成交
        _tradeMode = 2;
    }
    
    if (self.isOfferSell) {
        //弹出匿名选择页面
           [self addIsAnonymousView];
    }else {
        if (!_counterPartyId) {
            //弹窗输入交易对手页面
            [self addCounterPartyIdView];
        }else{
            [self selectToSell];
        }
    }

}

//选择卖出
- (void)selectToSell{
    if (_dataArray.count == 1 && _tradeMode == 1) {
        [self.view showWarning:@"一张票据不能进行挑票成交！"];
        return;
    }
    if (![TradeViewModel judgeTheSameOfBillList:_dataArray]) {
                 [UIAlertController alertControllerWithTitle:@"提示" message:@"所选票据的票据期限类型或承兑人类型必须一致！" okTitle:@"确定" cancelTtile:nil target:self clickBlock:nil];
        return;
    }
    
    [self.tradeViewModel selectToSell:_dataArray tradeMode:[NSNumber numberWithInteger:_tradeMode]
                            tradeType:@1 counterPartyId:self.counterPartyId response:^(NSString *message) {
                                [UIAlertController alertControllerWithTitle:@"提示" message:message okTitle:@"确定" cancelTtile:nil target:self clickBlock:nil];
                            }];

}

- (void)stockDidSelectWithIndexPath:(NSIndexPath *)indexPath
                          stockView:(id)view{
    NSNumber *discountRate = [TradeViewModel getDiscountRateWithStockModel:self.dataArray[indexPath.row]];
    __weak typeof(self) weakSelf = self;
    _infoMationView.inputViewStr = [NSString stringWithFormat:@"%@",discountRate==nil?@"":discountRate];
    [_infoMationView showWithType:InfoMationViewType_InPut_DiscountRate];
    _infoMationView.inputTextViewBlock = ^(BOOL isSureBtn,NSString *message){
        if (isSureBtn && message) {
            [weakSelf didResetDiscountRate:message indexPath:indexPath];
        }
    };
}

- (void)didResetDiscountRate:(NSString *)discountRate indexPath:(NSIndexPath *)indexPath{
    NSNumber *rate = [NSNumber numberWithFloat:discountRate.floatValue];
    [TradeViewModel resetDiscountRate:rate stockModel:self.dataArray[indexPath.row]];
    [self.stockView tableViewReloadData];
}

//重写DataArray
- (void)setDataArray:(NSArray *)dataArray{
    _dataArray = [TradeViewModel changeToTradeWithArray:dataArray];

}

//显示是否匿名
- (void)addIsAnonymousView{
    [_infoMationView showWithType:InfoMationViewType_IsAnonymous];
    __weak typeof(self) weakSelf = self;
    _infoMationView.isAnonymousViewBlock = ^(BOOL isSureBtn,BOOL isAnoymous){
        if (isSureBtn) {
            [weakSelf IsAnonymousDidSelect:isAnoymous];
        }
    };
}

//输入交易对手
- (void)addCounterPartyIdView{
    [_infoMationView showWithType:InfoMationViewType_InPut_counterPartyId];
    __weak typeof(self) weakSelf = self;
    _infoMationView.inputTextViewBlock = ^(BOOL isSureBtn,NSString *message){
        if (isSureBtn) {
              weakSelf.counterPartyId = [NSNumber numberWithInt:[message intValue]];
        }
    };
}


- (void)IsAnonymousDidSelect:(BOOL)isAnonymous{
    if (self.selectFinish) {
        NSArray *billRecords =  [KLineViewModel getBillRecordsWithBillList:self.dataArray];
        self.selectFinish(_tradeMode,isAnonymous,billRecords);
    }
    [self.navigationController popViewControllerAnimated:YES];
}


@end

