//
//  MapViewController.m
//  Billunion
//
//  Created by QT on 17/1/9.
//  Copyright © 2017年 JM. All rights reserved.
//

#import "MapViewController.h"

#import <MAMapKit/MAMapKit.h>
#import <AMapFoundationKit/AMapFoundationKit.h>
#import <AMapLocationKit/AMapLocationKit.h>
#import <AMapNaviKit/AMapNaviKit.h>

#import <CoreLocation/CoreLocation.h>

#define DefaultLocationTimeout  6
#define kInfoViewHeight 112.5
#define kMargin  STRealX(35)

@interface MapViewController ()<MAMapViewDelegate, AMapLocationManagerDelegate,
                                AMapNaviDriveManagerDelegate,AMapNaviDriveViewDelegate>

@property (nonatomic, strong) MAMapView *mapView;
/** 定位 */
@property (nonatomic, strong) AMapLocationManager *locationManager;
@property (nonatomic, copy) AMapLocatingCompletionBlock completionBlock;
/** 导航管理器 */
@property (nonatomic, strong) AMapNaviDriveManager *driveManager;

@property (nonatomic, strong) AMapNaviPoint *startPoint;
@property (nonatomic, strong) AMapNaviPoint *endPoint;

/** 地理编码管理器 */
@property (nonatomic, strong) CLGeocoder *cLGeocoder;

@property (nonatomic,strong)UIView *infoView;
@property (nonatomic,strong)UIView *distanceView;

/** 目的地 */
@property (nonatomic,strong)AMapNaviRoute *destinationRoute;

@end

@implementation MapViewController

- (void)viewDidLoad {
    [super viewDidLoad];
     // com.billunion.PCStock
    [AMapServices sharedServices].apiKey = @"621bd5612c3b7735fd771f2152619a09";
    [self setupBakcButton];
    self.title = @"票源距离";
    if ([CLLocationManager authorizationStatus] == kCLAuthorizationStatusDenied) {
        NSLog(@"没有权限，引导用户去开启定位");
        NSURL *url = [NSURL URLWithString:UIApplicationOpenSettingsURLString];
        if ([[UIApplication sharedApplication]canOpenURL:url]) {
            [[UIApplication sharedApplication]openURL:url];
        }
    }
    [self initCompleteBlock]; // 先初始化block
    [self initMapView];
    [self initDriveManager];
    [self initProperties];
    [self geoCodeWithAddress:@"深圳"];
    
    NSArray *arr = @[
                     @"持票人:普惠创新金融信息服务有限公司",
                     @"贴现人:普惠创新金融信息服务有限公司",
                     @"成交金额: 123.00万",
                     @"成交时间: 2016/12/15 20:02:22"
                     ];
    [self setInfoViewWithArray:arr];

}

- (void)initProperties
{
    /** 起始点刚开始可以设置为终点的location位置先 */
    self.startPoint = [AMapNaviPoint locationWithLatitude:0 longitude:0];
    self.endPoint   = [AMapNaviPoint locationWithLatitude:0 longitude:0];
}

#pragma mark - 初始化地图和开始定位
- (void)initMapView
{
    if (self.mapView == nil)
    {
        self.mapView = [[MAMapView alloc] initWithFrame:CGRectMake(0, 64,
                                                                   self.view.bounds.size.width,
                                                                   self.view.bounds.size.height - 64)];

        [self.mapView setDelegate:self];
        self.mapView.rotateEnabled = NO;
        self.mapView.userTrackingMode = MAUserTrackingModeFollow;
        self.mapView.mapType = MAMapTypeStandard;
        self.mapView.showsUserLocation = YES;
//        self.mapView.showsBuildings = YES;
        [self.mapView setZoomLevel:10.0 animated:YES];
        //后台定位
//        _mapView.pausesLocationUpdatesAutomatically = NO;
//        _mapView.allowsBackgroundLocationUpdates = YES;//iOS9以上系统必须配置 ？？
        [self.view addSubview:self.mapView];
    }

    self.locationManager = [[AMapLocationManager alloc] init];
    [self.locationManager setDelegate:self];
    [self.locationManager setDesiredAccuracy:kCLLocationAccuracyHundredMeters];
    [self.locationManager setPausesLocationUpdatesAutomatically:NO];
    //    [self.locationManager setAllowsBackgroundLocationUpdates:YES];
    [self.locationManager setLocationTimeout:DefaultLocationTimeout];
    /** 开始定位 */
    [self.locationManager requestLocationWithReGeocode:YES completionBlock:self.completionBlock];
}



- (void)initCompleteBlock
{
    __weak MapViewController *weakSelf = self;
    self.completionBlock = ^(CLLocation *location, AMapLocationReGeocode *regeocode, NSError *error)
    {
        if (error)
        {
            NSLog(@"locError:{%ld - %@};", (long)error.code, error.localizedDescription);
            if (error.code == AMapLocationErrorLocateFailed)
            {
                return;
            }
        }
//  获取到定位点
        if (location)
        {
            MAPointAnnotation *annotation = [[MAPointAnnotation alloc] init];
            [annotation setCoordinate:location.coordinate];
             weakSelf.startPoint = [AMapNaviPoint locationWithLatitude:location.coordinate.latitude
                                                         longitude:location.coordinate.longitude];
            // 开始计算路径
            [weakSelf.driveManager calculateDriveRouteWithStartPoints:@[weakSelf.startPoint]
                                                            endPoints:@[weakSelf.endPoint]
                                                            wayPoints:nil
                                                      drivingStrategy:AMapNaviDrivingStrategySinglePrioritiseDistance];
            
            //    //进行多路径规划
            //- (void)multipleRoutePlanAction:(id)sender
            //{
            //    self.isMultipleRoutePlan = YES;
            //    [self.driveManager calculateDriveRouteWithStartPoints:@[self.startPoint]
            //                                                endPoints:@[self.endPoint]
            //                                                wayPoints:nil
            //                                          drivingStrategy:[self.preferenceView strategyWithIsMultiple:self.isMultipleRoutePlan]];
            //}
            //
            ////选择其中一条路线导航
            //[self.driveManager selectNaviRouteWithRouteID:routeID]

          
            [annotation setTitle:[NSString stringWithFormat:@"%@", regeocode.formattedAddress]];
            MapViewController *strongSelf = weakSelf;
            [strongSelf addAnnotationToMapView:annotation];
        }
    };
}
/** 添加大头针 */
- (void)addAnnotationToMapView:(id<MAAnnotation>)annotation
{
    [self.mapView addAnnotation:annotation];
    
    [self.mapView selectAnnotation:annotation animated:YES];
    [self.mapView setZoomLevel:15.1 animated:NO];
    [self.mapView setCenterCoordinate:annotation.coordinate animated:YES];
}


- (void)initDriveManager
{
    if (self.driveManager == nil)
    {
        self.driveManager = [[AMapNaviDriveManager alloc] init];
        [self.driveManager setDelegate:self];
    }
}


#pragma mark - MAMapViewDelegate
/**
 * @brief 根据anntation生成对应的View
 * @param mapView 地图View
 * @param annotation 指定的标注
 * @return 生成的标注View
 */
- (MAAnnotationView *)mapView:(MAMapView *)mapView viewForAnnotation:(id <MAAnnotation>)annotation
{
    NSLog(@"%s",__func__);
    /** 紫色大头针 */
//    if ([annotation isKindOfClass:[MAPointAnnotation class]])
//    {
//        static NSString *pointReuseIndetifier = @"pointReuseIndetifier";
//        
//        MAPinAnnotationView *annotationView = (MAPinAnnotationView *)[mapView dequeueReusableAnnotationViewWithIdentifier:pointReuseIndetifier];
//        if (annotationView == nil)
//        {
//            annotationView = [[MAPinAnnotationView alloc] initWithAnnotation:annotation reuseIdentifier:pointReuseIndetifier];
//        }
//        
//        annotationView.canShowCallout   = YES;
//        annotationView.animatesDrop     = YES;
//        annotationView.draggable        = NO;
//        annotationView.pinColor         = MAPinAnnotationColorPurple;
//        
//        return annotationView;
//    }
    return nil;
}


/**
 * @brief 位置或者设备方向更新后，会调用此函数
 * @param mapView 地图View
 * @param userLocation 用户定位信息(包括位置与设备方向等数据)
 * @param updatingLocation 标示是否是location数据更新, YES:location数据更新 NO:heading数据更新
 */
-(void)mapView:(MAMapView *)mapView didUpdateUserLocation:(MAUserLocation *)userLocation updatingLocation:(BOOL)updatingLocation
{
//   NSLog(@"%s",__func__);
// self.startPoint = [AMapNaviPoint locationWithLatitude:userLocation.location.coordinate.latitude
//                                             longitude:userLocation.location.coordinate.longitude];
}

#pragma mark - AMapNaviDriveManagerDelegate
/** 当驾车路线规划成功时，会进 driveManagerOnCalculateRouteSuccess 回调，在该回调函数中，可以进行规划路线显示也可以直接开启导航
 
 */
- (void)driveManagerOnCalculateRouteSuccess:(AMapNaviDriveManager *)driveManager
{
    NSLog(@"onCalculateRouteSuccess:%@",driveManager.naviRoutes);
       [self showNaviRoutes];
}
#pragma mark -  绘制路线
- (void)showNaviRoutes
{
    if ([self.driveManager.naviRoutes count] <= 0)
    {
        return;
    }
    
    [self.mapView removeOverlays:self.mapView.overlays];
    
    
    
    //将路径显示到地图上
    for (NSNumber *aRouteID in [self.driveManager.naviRoutes allKeys])
    {
        AMapNaviRoute *aRoute = [[self.driveManager naviRoutes] objectForKey:aRouteID];
        self.destinationRoute = aRoute; // 获取到最后一个值
        int count = (int)[[aRoute routeCoordinates] count];
        NSLog(@"当前导航路径的信息: 长度：%ld-- 时间: %ld",aRoute.routeLength,aRoute.routeTime);
      
        //添加路径Polyline
        CLLocationCoordinate2D coords[count];
        
        for (int i = 0; i < count; i++)
        {
            AMapNaviPoint *coordinate = [[aRoute routeCoordinates] objectAtIndex:i];
            coords[i].latitude = [coordinate latitude];
            coords[i].longitude = [coordinate longitude];
        }
        
        MAPolyline *polyline = [MAPolyline polylineWithCoordinates:coords count:count];
        [self.mapView addOverlay:polyline];
    }
    [self.mapView showAnnotations:self.mapView.annotations animated:YES];
    /** 路程View */
    CLLocationCoordinate2D coor = {self.endPoint.latitude,self.endPoint.longitude};
    CGPoint point =  [self.mapView convertCoordinate:coor toPointToView:self.view];
    NSLog(@"dian==== %lf == %lf",point.x, point.y);
    self.distanceView.origin = CGPointMake(self.view.centerX + 20, self.view.centerY + 20);
    [self.view addSubview:self.distanceView];
    NSString *dis = [NSString stringWithFormat:@"全程共: %.1lfkm",self.destinationRoute.routeLength/1000.0];
    NSString *hour = [NSString stringWithFormat:@"预计时间:%.1lfh",self.destinationRoute.routeTime/3600.0];
    [self setDistanceViewWithDistance:dis hour:hour];
}

// 渲染路径
- (MAOverlayRenderer *)mapView:(MAMapView *)mapView rendererForOverlay:(id <MAOverlay>)overlay
{
    
    if ([overlay isKindOfClass:[MAPolyline class]])
    {
        MAPolylineRenderer *polylineRenderer = [[MAPolylineRenderer alloc] initWithPolyline:(MAPolyline*)overlay];
        polylineRenderer.strokeColor = [UIColor colorWithRGBHex:0x525252];
        polylineRenderer.lineWidth   = 3.0f;
        polylineRenderer.lineJoinType = kMALineJoinRound;//连接类型
        return polylineRenderer;
    }
    
    return nil;
    
}

- (void)viewWillDisappear:(BOOL)animated
{
    [super viewWillDisappear:animated];
    [self cleanUpAction];
}

- (void)cleanUpAction
{
    [self.locationManager stopUpdatingLocation];
    [self.locationManager setDelegate:nil];
    [self.driveManager stopNavi];
    [self.driveManager setDelegate:nil];
    [self.mapView removeAnnotations:self.mapView.annotations];
}


/** 地理编码管理器 */
- (CLGeocoder *)cLGeocoder
{
    if (!_cLGeocoder) {
        _cLGeocoder = [[CLGeocoder alloc] init];
    }
    return _cLGeocoder;
}

// 地理编码(地址关键字 ->经纬度 )
- (void)geoCodeWithAddress:(NSString *)address{
//    NSString *address = @"广州塔";
    // 容错处理
    if([address length] == 0)
    {
        return;
    }
    
    // 根据地址关键字, 进行地理编码
    [self.cLGeocoder geocodeAddressString:address completionHandler:^(NSArray<CLPlacemark *> * _Nullable placemarks, NSError * _Nullable error) {
        
        /**
         *  CLPlacemark : 地标对象
         *  location : 对应的位置对象
         *  name : 地址全称
         *  locality : 城市
         *  按相关性进行排序
         */
        CLPlacemark *pl = [placemarks firstObject];
        
        if(error == nil)
        {
            NSLog(@"获得的经纬度 %f----%f", pl.location.coordinate.latitude, pl.location.coordinate.longitude);
            self.endPoint.latitude = pl.location.coordinate.latitude;
            self.endPoint.longitude = pl.location.coordinate.longitude;
            MAPointAnnotation *annotation = [[MAPointAnnotation alloc] init];
            [annotation setCoordinate:pl.location.coordinate];
            [annotation setTitle:address];
            [self addAnnotationToMapView:annotation];
         
            if(self.startPoint.latitude == 0 || self.endPoint.longitude == 0){
                return ;
            }
            [self.driveManager calculateDriveRouteWithEndPoints:@[self.endPoint]
                                                      wayPoints:nil
                                                drivingStrategy:AMapNaviDrivingStrategySingleAvoidCostAndCongestion];
        }else{
            NSLog(@"地址没找到，可能在月球上:%@",error);
        }
    }];
}

-(UIView *)infoView
{
    if (!_infoView) {
        _infoView = [[UIView alloc]initWithFrame:CGRectMake(kMargin, self.view.height - kInfoViewHeight - kMargin,(WIDTH-2*kMargin), kInfoViewHeight)];
        _infoView.backgroundColor = [UIColor colorWithRGBHex:0x90111111];
        NSString *str = @"成交时间：2016/12/15 20:02:22";
        CGFloat labelH = 15;
        CGFloat labelW = [str getWidthWithLimitHeight:labelH fontSize:13.0] + STRealX(100);
        CGFloat left = (_infoView.width - labelW)*0.5;
        for(int i = 0;i<4;i++){
            UILabel *label = [[UILabel alloc]initWithFrame:CGRectMake(left,15+(labelH+10)*i, labelW, labelH)];
            label.textColor = [UIColor colorWithRGBHex:0xffffff];
            label.textAlignment = NSTextAlignmentLeft;
            label.font = [UIFont systemFontOfSize:13.0f];
            label.tag = i ;
            [_infoView addSubview:label];
        }
        // 添加信息View
        [self.view addSubview:_infoView];
        
    }
    return _infoView;
}

/** 设置infoView上的label显示的内容 */
-(void)setInfoViewWithArray:(NSArray*)arr
{
    // 加判断 是因为防止崩溃
    if(arr.count == 4){
        for (int i=0;i<arr.count;i++) {
            UILabel *label = self.infoView.subviews[i];
            label.text = arr[i];
        }
    }
   
}
/** 设置distanceView上的label显示的内容 */
-(void)setDistanceViewWithDistance:(NSString*)dis hour:(NSString *)hour
{
    UILabel *label = self.distanceView.subviews.firstObject;
    label.text = dis;
    UILabel *label1 = self.distanceView.subviews.lastObject;
    label1.text = hour;
}

-(UIView *)distanceView
{
    if (!_distanceView) {
        NSString *str = @"全程共:9999.99km";
        CGFloat labelH = 15;
        CGFloat width = [str getWidthWithLimitHeight:labelH fontSize:13.0];
        CGFloat left = 10;
        _distanceView = [[UIView alloc]initWithFrame:CGRectMake(0,0,width+left*2,60)];
        _distanceView.backgroundColor = [UIColor colorWithRGBHex:0x90111111];
   
        for(int i = 0;i<2;i++){
            UILabel *label = [[UILabel alloc]initWithFrame:CGRectMake(left,12+(labelH+10)*i, _distanceView.width-left*2, labelH)];
            label.textColor = [UIColor colorWithRGBHex:0xffffff];
            label.textAlignment = NSTextAlignmentLeft;
            label.font = [UIFont systemFontOfSize:13.0f];
            label.tag = i ;
            [_distanceView addSubview:label];
       }
    }
    return _distanceView;
}

-(void)touchesMoved:(NSSet<UITouch *> *)touches withEvent:(UIEvent *)event
{
    UITouch * touch = [touches anyObject];
    CGPoint point = [touch locationInView:self.view];
    if (CGRectContainsPoint(self.distanceView.frame, point)) {
        self.distanceView.center = point;
    }
}

@end
