
//
//  StockSelectViewController.m
//  Billunion
//
//  Created by Waki on 2017/2/15.
//  Copyright © 2017年 JM. All rights reserved.
//

#import "StockSelectViewController.h"
#import "StockView.h"
#import "TradeViewModel.h"
#import "KLineViewModel.h"
#import "InfoMationView.h"

@interface StockSelectViewController ()<StockViewProtocol,TradeConfigViewDelegate>

@property (nonatomic,strong)  StockView *stockView;
@property (nonatomic, strong) TradeViewModel *tradeViewModel;
@property (nonatomic ,strong) InfoMationView *infoMationView;
@property (nonatomic ,strong) NSNumber *counterPartyId;
@property (nonatomic, strong) TradeConfigView *tradeConfigView;

@end

@implementation StockSelectViewController

- (TradeViewModel *)tradeViewModel{
    if (!_tradeViewModel) {
        _tradeViewModel = [[TradeViewModel alloc] init];
    }
    return _tradeViewModel;
}

- (void)viewDidLoad {
    [super viewDidLoad];
    [self setupBakcButton];
    self.title = @"编辑成交";
    NSArray * subTitles =  [Tools getSubTitlesWithStockAllType:StockAllType_BillDetail];
    [self setAmcount];
    [self addStockViewWithSubTitles:subTitles];
    
    _infoMationView = [[InfoMationView alloc] initWithFrame:self.view.bounds];
    [self.view addSubview:_infoMationView];
}

- (void)addStockViewWithSubTitles:(NSArray *)subTitles{
    self.stockView = [[StockView alloc]initWithFrame:CGRectMake(0, 64, WIDTH, HEIGHT-64-self.tradeConfigView.height) withTransactionType:TransactionTypeSingle titles:subTitles];
    self.stockView.delegate = self;
    [self.view addSubview:self.stockView];
    
    self.stockView.dataArray = (NSMutableArray *)self.dataArray;
    [self.stockView tableViewReloadData];
}


- (TradeConfigView *)tradeConfigView{
    if (!_tradeConfigView) {
        _tradeConfigView = [[TradeConfigView alloc] initWithKlineType:self.tradeConfigViewType];
        _tradeConfigView.delegate = self;
        [self.view addSubview:_tradeConfigView];
    }
    return _tradeConfigView;
}

- (void)setAmcount{
    NSString *allAmount = [NSString stringWithFormat:@"%.2f",[KLineViewModel getAllAmountWithBillArray:self.dataArray]];
    NSString *averageDiscountRate = [NSString stringWithFormat:@"%.3f%%",[KLineViewModel getAverageDiscountRateWithBillArray:self.dataArray]];
    
    [self.tradeConfigView setAmcountWithAmcount:allAmount discountRate:averageDiscountRate];
}


- (NSInteger)getTradeMode{
    if (self.tradeConfigView.select1Index == 0) {
        return 2;   //批量成交
    }else{
        return  1;  //挑票成交
    }
    
}

-(NSInteger)getAnonymous{
    return  self.tradeConfigView.select2Index;
}

//选择卖出
- (void)selectToSell{
    if (([Config getCompanyType].intValue == 1 &&
        self.tradeConfigViewType == TradeConfigViewType_sellerInquiry) ||
        self.tradeConfigViewType == TradeConfigViewType_buyerMarket ||
        self.tradeConfigViewType == TradeConfigViewType_beBuyerSpecify ||
        self.tradeConfigViewType == TradeConfigViewType_sellerSpecify) {
        if (_dataArray.count == 1 && [self getTradeMode] == 1) {
            [self.view showWarning:@"一张票据不能进行挑票成交！"];
            return;
        }
    }
    if (![TradeViewModel judgeTheSameOfBillList:_dataArray]) {
        [self.view showWarning:@"票据期限或承兑人类型必须一致!" afterDelay:2.0];
        return;
    }

    
     __weak typeof(self) weakSelf = self;
    //询价卖出／指定卖出
    if (self.tradeConfigViewType == TradeConfigViewType_sellerInquiry ||
        self.tradeConfigViewType == TradeConfigViewType_sellerSpecify) {
        NSNumber *tradeType;
        NSNumber *tradeMode = @1;
        if (self.tradeConfigViewType == TradeConfigViewType_sellerInquiry) {
            tradeType = @0;
        }else{
            tradeType = @1;
            tradeMode = [NSNumber numberWithInteger:[self getTradeMode]];
        }
        
        

        [self.tradeViewModel selectToSell:_dataArray tradeMode:tradeMode
                                tradeType:tradeType counterPartyId:self.counterPartyId response:^(NSString *message) {
                                    [weakSelf.view showWarning:message];
                                }];
        
    }else if (self.tradeConfigViewType == TradeConfigViewType_buyerMarket ||   //买方市场 点击卖出
              self.tradeConfigViewType == TradeConfigViewType_beBuyerSpecify){  //被指定买入 点击卖出
        NSInteger anonymous = [self getAnonymous];
        if (self.tradeConfigViewType == TradeConfigViewType_beBuyerSpecify) {
            anonymous = 0;
        }
        NSArray *billRecords =  [KLineViewModel getBillRecordsWithBillList:self.dataArray];
        [KLineViewModel tradeSellerOfferWithBillRecords:billRecords
                                            isAnonymous:anonymous
                                              inquiryId:self.InquiryId
                                              tradeMode:[self getTradeMode]
                                               response:^(BOOL isSecceed, NSString *message) {
                                                   
                                                   [UIAlertController alertControllerWithTitle:@"提示" message:message okTitle:@"确定" cancelTtile:nil target:self clickBlock:^(BOOL ok, BOOL cancel) {
                                                       if (isSecceed && ok) {
                                                           [weakSelf.navigationController popViewControllerAnimated:YES];
                                                       }
                                                   }];
                                               }];
        
    }

}



- (void)stockDidSelectWithIndexPath:(NSIndexPath *)indexPath
                          stockView:(id)view{
    NSNumber *discountRate = [TradeViewModel getDiscountRateWithStockModel:self.dataArray[indexPath.row]];
    __weak typeof(self) weakSelf = self;
    _infoMationView.inputViewStr = [NSString stringWithFormat:@"%@",discountRate==nil?@"":discountRate];
    [_infoMationView showWithType:InfoMationViewType_InPut_DiscountRate];
    _infoMationView.inputTextViewBlock = ^(BOOL isSureBtn,NSString *message){
        if (isSureBtn && message) {
            [weakSelf didResetDiscountRate:message indexPath:indexPath];
        }
    };
}

- (void)didResetDiscountRate:(NSString *)discountRate indexPath:(NSIndexPath *)indexPath{
    NSNumber *rate = [NSNumber numberWithFloat:discountRate.floatValue];
    [TradeViewModel resetDiscountRate:rate stockModel:self.dataArray[indexPath.row]];
    [self.stockView tableViewReloadData];
    [self setAmcount];
}



#pragma mark - TradeConfigViewDelegate
- (void)didEnterTextField:(NSString *)text{
    if (self.tradeConfigViewType == TradeConfigViewType_sellerSpecify) {
        self.counterPartyId = [NSNumber numberWithInteger:text.integerValue];
    }
}

#pragma mark - 完成按钮
- (void)okClick{
    if(![TradeViewModel judgeHaveDiscountRate:self.dataArray]){
        [self.view showWarning:NSLocalizedString(@"DISCOUNTRATE_NONE", nil)];
        return;
    }
   
    [self selectToSell];
}


//重写DataArray
- (void)setDataArray:(NSArray *)dataArray{
    _dataArray = [TradeViewModel changeToTradeWithArray:dataArray];
}



@end

